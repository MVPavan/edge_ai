version: '3.5'

services:

    fr_minio:
        image: minio/minio
        container_name: fr_minio
        restart: unless-stopped
        volumes:
            - data1-1:/data
            # - data1-2:/data2
        ports:
            - "9000:9000"
        env_file:
            - .env
        command: server /data
        networks:
            - fr_db_network
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
            interval: 30s
            timeout: 20s
            retries: 3

    fr_redis:
        image: redis:4.0.5-alpine
        container_name: fr_redis
        # command: ["redis-server", "--bind", "fr_redis", "--port", "6379"]
        # command: ["redis-server", "--appendonly", "yes"]
        restart: unless-stopped
        hostname: fr_redis
        ports:
            - 6379:6379
        # volumes:
        #     - type: volume
        #       source: redis_data
        #       target: data/
        #     # - type: bind
        #     #   source: ./AppData/db_data/redis
        #     #   target: /data
        networks:
            - fr_db_network
        depends_on:
            - fr_minio
        

    fr_pgdb:
        image: postgres:11.5-alpine
        container_name: fr_postgresdb
        restart: unless-stopped
        ports:
            - "5432:5432"
        env_file:
            - .env
        depends_on:
            - fr_redis
        # volumes:
        #     - type: volume
        #       source: pgdb_data
        #       target: /var/lib/postgresql/data
        #     # - type: bind
        #     #   source: ./AppData/db_data/pgdb
        #     #   target: /var/lib/postgresql/data
        networks:
            - fr_db_network

    
    fr_mongodb:
        image: mongo:4.0
        container_name: fr_mongodb
        restart: unless-stopped
        depends_on:
            - fr_pgdb
        ports:
            - 27017:27017
        env_file:
            - .env
        # volumes:
        #     - type: volume
        #       source: mdb_data
        #       target: /data/db
        #     # - type: bind
        #     #   source: ./AppData/db_data/mdb
        #     #   target: /data/db
        networks:
            - fr_db_network
    
    fr_pgadmin:
        image: dpage/pgadmin4
        container_name: fr_pgadmin
        restart: unless-stopped
        env_file:
            - .env
        depends_on:
            - fr_pgdb
        ports:
            - 5050:80
        # volumes:
        #     - type: volume
        #       source: pgad_data
        #       target: /var/lib/pgadmin
        #       volume:
        #         nocopy: true

        networks:
            - fr_db_network

    # fr_rqdashboard:
    #     image: godber/rq-dashboard:latest
    #     container_name: fr_rqdashboard
    #     restart: unless-stopped
    #     ports:
    #         - 9181:9181
    #     depends_on:
    #         - fr_redis
    #     command: rq-dashboard -H fr_redis
    #     networks:
    #         - fr_db_network        

networks:
    fr_db_network:
        driver: bridge
        name: fr_network

# volumes:
#     redis_data:
#         name: aims_redis_data
#     pgdb_data:
#         name: aims_pgdb_data
#     mdb_data:
#         name: aims_mdb_data
#     pgad_data:
#         name: aims_pgad_data
            
volumes:
    data1-1:
    data1-2:
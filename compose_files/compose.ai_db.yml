version: '3'

services:

    ai_minio:
        image: minio/minio:latest
        container_name: ai_minio
        restart: unless-stopped
        volumes:
            - data1-1:/data
            # - data1-2:/data2
        ports:
            - "9000:9000"
        env_file:
            - .env
        command: server /data
        networks:
            - ai_db_network
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
            interval: 30s
            timeout: 20s
            retries: 3


    ai_redis:
        image: redis:latest
        container_name: ai_redis
        restart: unless-stopped
        hostname: ai_redis
        ports:
            - 6379:6379
        networks:
            - ai_db_network
        depends_on:
            - ai_minio
        

    ai_pgdb:
        image: postgres:latest
        container_name: ai_postgresdb
        restart: unless-stopped
        ports:
            - "5432:5432"
        env_file:
            - .env
        depends_on:
            - ai_redis
        networks:
            - ai_db_network

    
    ai_mongodb:
        image: mongo:latest
        container_name: ai_mongodb
        restart: unless-stopped
        depends_on:
            - ai_pgdb
        ports:
            - 27017:27017
        env_file:
            - .env
        networks:
            - ai_db_network
    
    ai_pgadmin:
        image: dpage/pgadmin4:latest
        container_name: ai_pgadmin
        restart: unless-stopped
        env_file:
            - .env
        depends_on:
            - ai_pgdb
        ports:
            - 5050:80
        networks:
            - ai_db_network      

networks:
    ai_db_network:
        driver: bridge
        name: ai_network

# volumes:
#     redis_data:
#         name: ai_redis_data
#     pgdb_data:
#         name: ai_pgdb_data
#     mdb_data:
#         name: ai_mdb_data
#     pgad_data:
#         name: ai_pgad_data
            
volumes:
    data1-1:
    data1-2: